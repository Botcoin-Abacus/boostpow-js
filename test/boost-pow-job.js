'use strict';
var expect = require('chai').expect;
var index = require('../dist/index.js');

describe('boost #BoostPowJob create various getters and setters', () => {

   it('should be valid minimal', async () => {
      const job = index.BoostPowJob.fromObject({
         content: 'hello world',
         diff: 157416.40184364,
      });

      const jobObj = job.toObject();
      expect(jobObj).to.eql({
         content: Buffer.from('00000000000000000000000000000000000000000068656c6c6f20776f726c64', 'hex').toString('hex'),
         diff: 157416.40184364,
         category: 0,
         tag: '0000000000000000000000000000000000000000',
         metadata: "0000000000000000000000000000000000000000000000000000000000000000",
         unique: 0,
      })
   });

   it('should be valid full', async () => {
      const job = index.BoostPowJob.fromObject({
         content: 'hello world',
         diff: 157416.40184364,
         // Optional fields below
         category: 1234,
         tag: 'animals',
         metadata: 'metadata here',
         // Optional and auto-generated
         unique: 2436437219,
      });

      const jobObj = job.toObject();
      expect(jobObj).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 1234,
         tag: index.BoostPowJob.createBufferAndPad('animals', 20).toString('hex'),
         metadata: index.BoostPowJob.createBufferAndPad('metadata here', 32).toString('hex'),
         unique: 2436437219,
      });

      expect(jobObj).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 1234,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });
   });

   it('should be valid full from object with hex fields', async () => {
      const job = index.BoostPowJob.fromObject({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 1234,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      const jobObj = job.toObject();
      expect(jobObj).to.eql({
         content: index.BoostPowJob.createBufferAndPad('hello world', 32).toString('hex'),
         diff: 157416.40184364,
         category: 1234,
         tag: index.BoostPowJob.createBufferAndPad('animals', 20).toString('hex'),
         metadata: index.BoostPowJob.createBufferAndPad('metadata here', 32).toString('hex'),
         unique: 2436437219,
      });

      expect(jobObj).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 1234,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });
   });

   it('should generate output script Hex', async () => {
      const job = index.BoostPowJob.fromObject({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      const outputScript = job.toHex();
      const jobFromHex = index.BoostPowJob.fromHex(outputScript);
      expect(jobFromHex.toObject()).to.eql(job.toObject());

      expect(jobFromHex.toObject()).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(job.toObject()).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(outputScript).to.eql('04000000412000000000000000000000000000000000000000000068656c6c6f20776f726c64041a6a93b31400000000000000000000000000616e696d616c730800000000913914e320000000000000000000000000000000000000006d6574616461746120686572655879825488567a766b7b5479825488537f7653a269760120a1696b1d00000000000000000000000000000000000000000000000000000000007e6c5394996b577a825888547f6b7e7b7e7e7eaa7c7e7e7e7c7e6c7e6c7eaa6c9f6976aa6c88ac');
   });


   it('should generate output script toString', async () => {
      const job = index.BoostPowJob.fromObject({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      const outputScript = job.toString();
      const jobFromHex = index.BoostPowJob.fromString(outputScript);
      expect(jobFromHex.toObject()).to.eql(job.toObject());

      expect(jobFromHex.toObject()).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(job.toObject()).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(outputScript).to.eql('4 0x00000041 32 0x00000000000000000000000000000000000000000068656c6c6f20776f726c64 4 0x1a6a93b3 20 0x00000000000000000000000000616e696d616c73 8 0x00000000913914e3 32 0x000000000000000000000000000000000000006d657461646174612068657265 OP_8 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_6 OP_ROLL OP_DUP OP_TOALTSTACK OP_ROT OP_4 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_3 OP_SPLIT OP_DUP OP_3 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP 1 0x20 OP_LESSTHANOREQUAL OP_VERIFY OP_TOALTSTACK 29 0x0000000000000000000000000000000000000000000000000000000000 OP_CAT OP_FROMALTSTACK OP_3 OP_SUB OP_RSHIFT OP_TOALTSTACK OP_7 OP_ROLL OP_SIZE OP_8 OP_EQUALVERIFY OP_4 OP_SPLIT OP_TOALTSTACK OP_CAT OP_ROT OP_CAT OP_CAT OP_CAT OP_HASH256 OP_SWAP OP_CAT OP_CAT OP_CAT OP_SWAP OP_CAT OP_FROMALTSTACK OP_CAT OP_FROMALTSTACK OP_CAT OP_HASH256 OP_FROMALTSTACK OP_LESSTHAN OP_VERIFY OP_DUP OP_HASH256 OP_FROMALTSTACK OP_EQUALVERIFY OP_CHECKSIG');
   });

   it('should generate output script ASM', async () => {
      const job = index.BoostPowJob.fromObject({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      // Why the HECK does toString() work for fromASM, but toASM into fromASM does not?? Argghhh! bsv.js!
      const outputScript = job.toString();
      const jobFromHex = index.BoostPowJob.fromASM(outputScript);
      expect(jobFromHex.toObject()).to.eql(job.toObject());

      expect(jobFromHex.toObject()).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(job.toObject()).to.eql({
         content: '00000000000000000000000000000000000000000068656c6c6f20776f726c64',
         diff: 157416.40184364,
         category: 65,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(outputScript).to.eql('4 0x00000041 32 0x00000000000000000000000000000000000000000068656c6c6f20776f726c64 4 0x1a6a93b3 20 0x00000000000000000000000000616e696d616c73 8 0x00000000913914e3 32 0x000000000000000000000000000000000000006d657461646174612068657265 OP_8 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_6 OP_ROLL OP_DUP OP_TOALTSTACK OP_ROT OP_4 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_3 OP_SPLIT OP_DUP OP_3 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP 1 0x20 OP_LESSTHANOREQUAL OP_VERIFY OP_TOALTSTACK 29 0x0000000000000000000000000000000000000000000000000000000000 OP_CAT OP_FROMALTSTACK OP_3 OP_SUB OP_RSHIFT OP_TOALTSTACK OP_7 OP_ROLL OP_SIZE OP_8 OP_EQUALVERIFY OP_4 OP_SPLIT OP_TOALTSTACK OP_CAT OP_ROT OP_CAT OP_CAT OP_CAT OP_HASH256 OP_SWAP OP_CAT OP_CAT OP_CAT OP_SWAP OP_CAT OP_FROMALTSTACK OP_CAT OP_FROMALTSTACK OP_CAT OP_HASH256 OP_FROMALTSTACK OP_LESSTHAN OP_VERIFY OP_DUP OP_HASH256 OP_FROMALTSTACK OP_EQUALVERIFY OP_CHECKSIG');

      expect(job.toASM()).to.eql('00000041 00000000000000000000000000000000000000000068656c6c6f20776f726c64 1a6a93b3 00000000000000000000000000616e696d616c73 00000000913914e3 000000000000000000000000000000000000006d657461646174612068657265 OP_8 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_6 OP_ROLL OP_DUP OP_TOALTSTACK OP_ROT OP_4 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_3 OP_SPLIT OP_DUP OP_3 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP 20 OP_LESSTHANOREQUAL OP_VERIFY OP_TOALTSTACK 0000000000000000000000000000000000000000000000000000000000 OP_CAT OP_FROMALTSTACK OP_3 OP_SUB OP_RSHIFT OP_TOALTSTACK OP_7 OP_ROLL OP_SIZE OP_8 OP_EQUALVERIFY OP_4 OP_SPLIT OP_TOALTSTACK OP_CAT OP_ROT OP_CAT OP_CAT OP_CAT OP_HASH256 OP_SWAP OP_CAT OP_CAT OP_CAT OP_SWAP OP_CAT OP_FROMALTSTACK OP_CAT OP_FROMALTSTACK OP_CAT OP_HASH256 OP_FROMALTSTACK OP_LESSTHAN OP_VERIFY OP_DUP OP_HASH256 OP_FROMALTSTACK OP_EQUALVERIFY OP_CHECKSIG');

   });

   it('should generate same formatted bits as bitcoin block 0000000000002917ed80650c6174aac8dfc46f5fe36480aaef682ff6cd83c3ca', async () => {
      const job = index.BoostPowJob.fromObject({
         content: '0000000000000b60bc96a44724fd72daf9b92cf8ad00510b5224c6253ac40095',
         diff: 157416.40184364,
         category: 1,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      const outputScript = job.toString();
      const jobFromHex = index.BoostPowJob.fromString(outputScript);
      expect(jobFromHex.toObject()).to.eql(job.toObject());

      expect(jobFromHex.toObject()).to.eql({
         content: '0000000000000b60bc96a44724fd72daf9b92cf8ad00510b5224c6253ac40095',
         diff: 157416.40184364,
         category: 1,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(job.toObject()).to.eql({
         content: '0000000000000b60bc96a44724fd72daf9b92cf8ad00510b5224c6253ac40095',
         diff: 157416.40184364,
         category: 1,
         tag: '00000000000000000000000000616e696d616c73',
         metadata: '000000000000000000000000000000000000006d657461646174612068657265',
         unique: 2436437219,
      });

      expect(outputScript).to.eql('4 0x00000001 32 0x0000000000000b60bc96a44724fd72daf9b92cf8ad00510b5224c6253ac40095 4 0x1a6a93b3 20 0x00000000000000000000000000616e696d616c73 8 0x00000000913914e3 32 0x000000000000000000000000000000000000006d657461646174612068657265 OP_8 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_6 OP_ROLL OP_DUP OP_TOALTSTACK OP_ROT OP_4 OP_PICK OP_SIZE OP_4 OP_EQUALVERIFY OP_3 OP_SPLIT OP_DUP OP_3 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP 1 0x20 OP_LESSTHANOREQUAL OP_VERIFY OP_TOALTSTACK 29 0x0000000000000000000000000000000000000000000000000000000000 OP_CAT OP_FROMALTSTACK OP_3 OP_SUB OP_RSHIFT OP_TOALTSTACK OP_7 OP_ROLL OP_SIZE OP_8 OP_EQUALVERIFY OP_4 OP_SPLIT OP_TOALTSTACK OP_CAT OP_ROT OP_CAT OP_CAT OP_CAT OP_HASH256 OP_SWAP OP_CAT OP_CAT OP_CAT OP_SWAP OP_CAT OP_FROMALTSTACK OP_CAT OP_FROMALTSTACK OP_CAT OP_HASH256 OP_FROMALTSTACK OP_LESSTHAN OP_VERIFY OP_DUP OP_HASH256 OP_FROMALTSTACK OP_EQUALVERIFY OP_CHECKSIG');
   });
});
